name: CI

on: [push, pull_request, workflow_call]

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
{%- raw %}
          key: ${{ hashFiles('.pre-commit-config.yaml') }}-pre-commit
{%- endraw %}
      - name: Install and run pre-commit
        # NOTE: using it directly here is faster than installing poetry etc.
        # just to run "poetry poe lint" + it is simple enough to be inlined here.
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

  # see https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token
  # to do inital setup of the gh-pages branch
  docs:
    needs: test
    runs-on: ubuntu-latest
{%- raw %}
    if: ${{ github.ref == 'refs/heads/main' }}
{%- endraw %}
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry + poethepoet
        run: |
          pipx install poetry
          poetry self add 'poethepoet[poetry_plugin]'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - run: poetry install
      - run: poetry poe docs

      - name: Deploy docs to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
{%- raw %}
          github_token: ${{ secrets.GITHUB_TOKEN }}
{%- endraw %}
          publish_dir: ./docs

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.8", "3.9", "3.10" ]
{%- raw %}
    runs-on: ${{ matrix.os }}
{%- endraw %}
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry + poethepoet
        run: |
          pipx install poetry
          poetry self add 'poethepoet[poetry_plugin]'

      - uses: actions/setup-python@v4
        with:
{%- raw %}
          python-version: ${{ matrix.python-version }}
{%- endraw %}
          cache: 'poetry'

      - run: poetry install
      - run: poetry poe test --cov --cov-report=xml

      - name: CodeCov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
{%- raw %}
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
{%- endraw %}


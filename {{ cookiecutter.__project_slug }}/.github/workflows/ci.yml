name: CI

on: [push, pull_request, workflow_call]

env:
  enable_codecov: false   # prepare repository and set to 'true' to enable
  enable_gh_pages: false  # prepare repository and set to 'true' to enable

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # NOTE: using custom cache, to include pre-commit linters + deps
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
{%- raw %}
          key: ${{ hashFiles('.pre-commit-config.yaml') }}-pre-commit
{%- endraw %}

      - run: poetry install
      - run: poetry run poe lint --all-files

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.8", "3.9", "3.10" ]
{%- raw %}
    runs-on: ${{ matrix.os }}
{%- endraw %}
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry + poethepoet
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
{%- raw %}
          python-version: ${{ matrix.python-version }}
{%- endraw %}
          cache: 'poetry'

      - run: poetry install
      - run: poetry run poe test --cov --cov-report=xml
      - run: pipx install safety
      - run: safety check -r pyproject.toml

      - name: CodeCov
        if: env.enable_codecov == 'true' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
{%- raw %}
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
{%- endraw %}

  docs:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'

      - run: poetry install --with docs
      - run: poetry run poe docs

      # see https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token
      # to do inital setup of the gh-pages branch
      - name: Deploy docs to gh-pages
        if: env.enable_gh_pages == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
{%- raw %}
          github_token: ${{ secrets.GITHUB_TOKEN }}
{%- endraw %}
          publish_dir: ./docs
